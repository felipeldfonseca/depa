# AI Departments Platform - Environment Configuration Template
# Copy this file to .env.local for local development
# Copy this file to .env.production for production deployment
# NEVER commit actual secret values to version control

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Environment
NODE_ENV=development
APP_ENV=development
DEBUG=true

# Application URLs
APP_URL=http://localhost:3000
API_URL=http://localhost:8000
FRONTEND_URL=http://localhost:3000
BACKEND_URL=http://localhost:8000

# Application Secrets
JWT_SECRET=your-super-secret-jwt-key-min-32-chars
JWT_REFRESH_SECRET=your-super-secret-refresh-key-min-32-chars
APP_SECRET_KEY=your-application-secret-key-min-32-chars
ENCRYPTION_KEY=your-32-char-encryption-key-here

# Session Configuration
SESSION_SECRET=your-session-secret-key-min-32-chars
COOKIE_SECRET=your-cookie-secret-key-min-32-chars

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database
DATABASE_URL=postgresql://username:password@localhost:5432/ai_departments_dev
DB_HOST=localhost
DB_PORT=5432
DB_NAME=ai_departments_dev
DB_USER=ai_departments_user
DB_PASSWORD=your-database-password
DB_SSL=false

# Database Pool Configuration
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_POOL_IDLE_TIMEOUT=30000

# Redis Cache
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password
REDIS_DB=0

# Redis Configuration
REDIS_TTL=3600
REDIS_RETRY_ATTEMPTS=3
REDIS_RETRY_DELAY=1000

# =============================================================================
# AI SERVICES CONFIGURATION
# =============================================================================

# OpenAI Configuration
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_ORGANIZATION=org-your-openai-org-id
OPENAI_PROJECT=proj-your-project-id

# Model Configuration
OPENAI_DEFAULT_MODEL=gpt-4
OPENAI_FALLBACK_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=1000
OPENAI_TEMPERATURE=0.7

# Anthropic Claude Configuration
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here
CLAUDE_DEFAULT_MODEL=claude-3-sonnet-20240229
CLAUDE_MAX_TOKENS=1000

# Google AI Configuration
GOOGLE_AI_API_KEY=your-google-ai-api-key
GOOGLE_PROJECT_ID=your-google-project-id

# Image Generation
DALLE_API_KEY=your-dalle-api-key
STABILITY_AI_API_KEY=your-stability-ai-key
MIDJOURNEY_API_KEY=your-midjourney-api-key

# =============================================================================
# GOOGLE CLOUD PLATFORM CONFIGURATION
# =============================================================================

# GCP Project Configuration
GOOGLE_CLOUD_PROJECT_ID=ai-departments-prod
GOOGLE_CLOUD_REGION=us-central1
GOOGLE_CLOUD_ZONE=us-central1-a

# GCP Service Account (JSON key as base64 or file path)
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json
GOOGLE_SERVICE_ACCOUNT_KEY=base64-encoded-json-key

# Cloud Storage
GCS_BUCKET_NAME=ai-departments-assets
GCS_PUBLIC_BUCKET=ai-departments-public
GCS_PRIVATE_BUCKET=ai-departments-private

# Cloud SQL
CLOUD_SQL_CONNECTION_NAME=project-id:region:instance-name
CLOUD_SQL_DATABASE_URL=postgresql://user:pass@/dbname?host=/cloudsql/connection-name

# Secret Manager
SECRET_MANAGER_PROJECT_ID=ai-departments-secrets

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# WhatsApp Cloud API
WHATSAPP_ACCESS_TOKEN=your-whatsapp-access-token
WHATSAPP_PHONE_NUMBER_ID=your-phone-number-id
WHATSAPP_WEBHOOK_VERIFY_TOKEN=your-webhook-verify-token
WHATSAPP_WEBHOOK_SECRET=your-webhook-secret

# Instagram Graph API
INSTAGRAM_APP_ID=your-instagram-app-id
INSTAGRAM_APP_SECRET=your-instagram-app-secret
INSTAGRAM_ACCESS_TOKEN=your-long-lived-access-token

# Facebook Graph API
FACEBOOK_APP_ID=your-facebook-app-id
FACEBOOK_APP_SECRET=your-facebook-app-secret
FACEBOOK_ACCESS_TOKEN=your-facebook-access-token

# TikTok API (for future use)
TIKTOK_CLIENT_KEY=your-tiktok-client-key
TIKTOK_CLIENT_SECRET=your-tiktok-client-secret

# X (Twitter) API (for future use)
X_API_KEY=your-x-api-key
X_API_SECRET=your-x-api-secret
X_ACCESS_TOKEN=your-x-access-token
X_ACCESS_TOKEN_SECRET=your-x-access-token-secret

# =============================================================================
# PAYMENT PROCESSING
# =============================================================================

# Stripe Configuration
STRIPE_PUBLISHABLE_KEY=pk_test_your-stripe-publishable-key
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=whsec_your-stripe-webhook-secret
STRIPE_PRICE_ID_STARTER=price_your-starter-price-id
STRIPE_PRICE_ID_GROWTH=price_your-growth-price-id
STRIPE_PRICE_ID_SCALE=price_your-scale-price-id

# Mercado Pago Configuration (Brazil)
MERCADO_PAGO_ACCESS_TOKEN=your-mercado-pago-access-token
MERCADO_PAGO_PUBLIC_KEY=your-mercado-pago-public-key
MERCADO_PAGO_CLIENT_ID=your-mercado-pago-client-id
MERCADO_PAGO_CLIENT_SECRET=your-mercado-pago-client-secret
MERCADO_PAGO_WEBHOOK_SECRET=your-mercado-pago-webhook-secret

# =============================================================================
# EMAIL SERVICES
# =============================================================================

# SendGrid Configuration
SENDGRID_API_KEY=SG.your-sendgrid-api-key
SENDGRID_FROM_EMAIL=noreply@aidepartments.com.br
SENDGRID_FROM_NAME=AI Departments Platform

# Amazon SES (alternative)
AWS_SES_REGION=us-east-1
AWS_SES_ACCESS_KEY_ID=your-aws-access-key
AWS_SES_SECRET_ACCESS_KEY=your-aws-secret-key

# Resend (alternative)
RESEND_API_KEY=re_your-resend-api-key

# =============================================================================
# SMS SERVICES
# =============================================================================

# Twilio Configuration
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Sentry Error Tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development
SENTRY_RELEASE=1.0.0

# OpenTelemetry
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OTEL_SERVICE_NAME=ai-departments-api
OTEL_RESOURCE_ATTRIBUTES=service.name=ai-departments,service.version=1.0.0

# Grafana & Prometheus
GRAFANA_URL=http://localhost:3001
PROMETHEUS_ENDPOINT=http://localhost:9090

# =============================================================================
# SECURITY & COMPLIANCE
# =============================================================================

# Rate Limiting
RATE_LIMIT_WINDOW_MS=3600000
RATE_LIMIT_MAX_REQUESTS=1000
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false

# CORS Configuration
CORS_ORIGIN=http://localhost:3000,https://app.aidepartments.com.br
CORS_CREDENTIALS=true

# Security Headers
HSTS_MAX_AGE=31536000
CSP_POLICY=default-src 'self'; script-src 'self' 'unsafe-eval'

# =============================================================================
# ANALYTICS & TRACKING
# =============================================================================

# Google Analytics
GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX-X

# Mixpanel Analytics
MIXPANEL_TOKEN=your-mixpanel-token

# PostHog Analytics
POSTHOG_API_KEY=your-posthog-api-key
POSTHOG_HOST=https://app.posthog.com

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# LaunchDarkly
LAUNCHDARKLY_SDK_KEY=sdk-your-launchdarkly-key

# Custom Feature Flags
FEATURE_DESIGN_DEPARTMENT=false
FEATURE_SALES_CRM_DEPARTMENT=false
FEATURE_MARKETPLACE=false
FEATURE_MOBILE_APP=false
FEATURE_ADVANCED_ANALYTICS=false

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Development Configuration
LOG_LEVEL=debug
ENABLE_REQUEST_LOGGING=true
ENABLE_QUERY_LOGGING=false

# Testing Configuration
TEST_DATABASE_URL=postgresql://test_user:test_pass@localhost:5432/ai_departments_test
TEST_REDIS_URL=redis://localhost:6379/1

# Mock Services (for development)
MOCK_WHATSAPP_API=false
MOCK_OPENAI_API=false
MOCK_PAYMENT_PROCESSING=false

# =============================================================================
# PRODUCTION SPECIFIC
# =============================================================================

# Production Database (Cloud SQL)
# DATABASE_URL=postgresql://user:pass@/dbname?host=/cloudsql/project:region:instance

# Production Redis (Memorystore)
# REDIS_URL=rediss://redis-cluster.region.gcp.cloud.com:6380

# Production File Storage
# GCS_BUCKET_NAME=ai-departments-prod-assets

# SSL Configuration
# SSL_CERT_PATH=/etc/ssl/certs/ai-departments.pem
# SSL_KEY_PATH=/etc/ssl/private/ai-departments.key

# =============================================================================
# STAGING SPECIFIC
# =============================================================================

# Staging Database
# DATABASE_URL=postgresql://staging_user:staging_pass@staging-db:5432/ai_departments_staging

# Staging External Services (use test/sandbox versions)
# STRIPE_SECRET_KEY=sk_test_staging-key
# MERCADO_PAGO_ACCESS_TOKEN=TEST-staging-token

# =============================================================================
# BACKUP & DISASTER RECOVERY
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_BUCKET=ai-departments-backups

# =============================================================================
# ENVIRONMENT SPECIFIC OVERRIDES
# =============================================================================

# Use these to override any setting based on environment
# Example: DATABASE_URL_OVERRIDE for emergency database switches

# Emergency Contacts
EMERGENCY_CONTACT_EMAIL=felipe@aidepartments.com.br
EMERGENCY_CONTACT_PHONE=+5511999999999

# =============================================================================
# NOTES FOR ENVIRONMENT SETUP
# =============================================================================

# Local Development Setup:
# 1. Copy this file to .env.local
# 2. Update database connection strings
# 3. Add your API keys for external services
# 4. Set DEBUG=true and LOG_LEVEL=debug
# 5. Use test/sandbox versions of payment APIs

# Staging Setup:
# 1. Copy this file to .env.staging
# 2. Use staging databases and services
# 3. Keep debug features enabled
# 4. Use test payment processors
# 5. Set appropriate CORS origins

# Production Setup:
# 1. Copy this file to .env.production
# 2. Use production databases and services
# 3. Disable debug features
# 4. Use live payment processors
# 5. Set strict CORS and security policies
# 6. Enable all monitoring and alerting

# Security Checklist:
# □ All secrets are using strong, unique values
# □ Database passwords are complex and rotated regularly
# □ API keys are from correct environments (test vs prod)
# □ CORS origins are restricted to necessary domains
# □ Debug features are disabled in production
# □ Monitoring and alerting are configured
# □ Backup and disaster recovery are tested

# =============================================================================
# COMMON COMMANDS FOR ENVIRONMENT SETUP
# =============================================================================

# Generate secure random keys:
# openssl rand -base64 32

# Test database connection:
# psql $DATABASE_URL -c "SELECT 1"

# Test Redis connection:
# redis-cli -u $REDIS_URL ping

# Validate environment variables:
# npm run validate-env

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common Issues:
# 1. Database connection fails: Check DB_HOST, DB_PORT, credentials
# 2. Redis connection fails: Check REDIS_URL, password, network access
# 3. API keys invalid: Verify keys are for correct environment
# 4. CORS errors: Check CORS_ORIGIN includes your frontend domain
# 5. SSL errors: Verify certificate paths and permissions

# Debug Commands:
# Check environment variables: printenv | grep AI_DEPARTMENTS
# Test API connectivity: curl -v $API_URL/health
# Check logs: tail -f /var/log/ai-departments/app.log